name: Build and Deploy

on:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Aliyun Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.ALIYUN_REGISTRY }}
        username: ${{ secrets.ALIYUN_USERNAME }}
        password: ${{ secrets.ALIYUN_PASSWORD }}

    - name: Build and push application image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.ALIYUN_REGISTRY }}:latest
          ${{ secrets.ALIYUN_REGISTRY }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64

    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          cd ${{ secrets.SERVER_PATH }}

          # Pull latest image
          docker pull ${{ secrets.ALIYUN_REGISTRY }}:latest

          # Start new container
          docker run -d \
            --name qq-notification \
            --restart unless-stopped \
            -p 8000:8000 \
            -v $(pwd)/config.ini:/app/config.ini \
            -v $(pwd)/logs:/app/logs \
            ${{ secrets.ALIYUN_REGISTRY }}:latest

          # Clean up old images
          docker image prune -f